services:
  postgres:
    image: postgres:16
    container_name: pg
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: authdb
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d authdb"]
      interval: 5s
      timeout: 3s
      retries: 20

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: app
      RABBITMQ_DEFAULT_PASS: app
    ports: ["5672:5672","15672:15672"]
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  auth-service:
    build: { context: ../auth-service }
    depends_on:
      postgres: { condition: service_healthy }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      JWT_SECRET: a6f3d8c2b7944f12a17d05c6b9f82a7d3e1f74c5a94e89b15b3f0c7e1a2d9f5c
      APP_JWT_SECRET: a6f3d8c2b7944f12a17d05c6b9f82a7d3e1f74c5a94e89b15b3f0c7e1a2d9f5c

  profile-service:
    build: { context: ../profile-service }
    depends_on:
      postgres: { condition: service_healthy }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/profiledb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: "false"

  enrollment-service:
    build: { context: ../enrollment-service }
    depends_on:
      postgres: { condition: service_healthy }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/enrollmentdb
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: "false"
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      PROGRAM_CATALOG_BASEURL: http://program-catalog-service:8085
      PROFILE_BASEURL: http://profile-service:8082

  program-catalog-service:
    build: { context: ../program-catalog-service }
    depends_on:
      postgres: { condition: service_healthy }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/programdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      ENROLLMENT_BASEURL: http://enrollment-service:8084
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: "false"


  payment-service:
    build: { context: ../payment-service }
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/paymentdb
      SPRING_DATASOURCE_USERNAME: app
      SPRING_DATASOURCE_PASSWORD: app
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: app
      SPRING_RABBITMQ_PASSWORD: app
      PROGRAM_CATALOG_BASEURL: http://program-catalog-service:8085
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: "false"


  mockbank-service:
    build: { context: ../mockbank-service }
    depends_on:
      rabbitmq: { condition: service_healthy }
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: app
      SPRING_RABBITMQ_PASSWORD: app
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_OPEN_IN_VIEW: "false"

  gateway-service:
    build: { context: ../gateway-service }
    depends_on:
      auth-service: { condition: service_started }
      profile-service: { condition: service_started }
      program-catalog-service: { condition: service_started }
      enrollment-service: { condition: service_started }
      payment-service: { condition: service_started }
    environment:
      JWT_SECRET: a6f3d8c2b7944f12a17d05c6b9f82a7d3e1f74c5a94e89b15b3f0c7e1a2d9f5c
      APP_JWT_SECRET: a6f3d8c2b7944f12a17d05c6b9f82a7d3e1f74c5a94e89b15b3f0c7e1a2d9f5c
    ports: ["8080:8080"]

volumes:
  pg_data:
